from __future__ import annotations

import flatbuffers
import numpy as np

import flatbuffers
import typing
from MotionProtocol.MessageType import MessageType
from MotionProtocol.Remote import Remote

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class Message(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> Message: ...
  @classmethod
  def GetRootAsMessage(cls, buf: bytes, offset: int) -> Message: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Type(self) -> typing.Literal[MessageType.UNKNOWN, MessageType.REMOTE]: ...
  def Remote(self) -> Remote | None: ...
def MessageStart(builder: flatbuffers.Builder) -> None: ...
def Start(builder: flatbuffers.Builder) -> None: ...
def MessageAddType(builder: flatbuffers.Builder, type: typing.Literal[MessageType.UNKNOWN, MessageType.REMOTE]) -> None: ...
def MessageAddRemote(builder: flatbuffers.Builder, remote: uoffset) -> None: ...
def MessageEnd(builder: flatbuffers.Builder) -> uoffset: ...
def End(builder: flatbuffers.Builder) -> uoffset: ...

